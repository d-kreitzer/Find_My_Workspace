@model IEnumerable<DIS6225_FinalProject_MVC.Models.Location>

@{
    ViewData["Title"] = "Locations";
}

@section Styles {
    <link rel="stylesheet" href="~/css/main.css" />
}



<div class="header-container">
    <h1>Locations</h1>
    <p class="cta-button">
        <a asp-action="Create">Create New</a>
    </p>
</div>
<br />

<div class="charts-container">
    <div class="chart-container">
        <h2>City Proportion </h2>
        <canvas id="myChart"></canvas>
    </div>
</div>
<br />

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                 @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.LocationID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.LocationID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.LocationID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        var ctx = document.getElementById('myChart').getContext('2d');
        var chartData = @Html.Raw(Json.Serialize(ViewBag.CityProportion));
        var labels = chartData.map(function (item) { return item.city; });
        var counts = chartData.map(function (item) { return item.count; });

        new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Number of Locations',
                    data: counts,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)'
                    ]
                }]
            },
            options: {
                responsive: true
            }
        });
    </script>
}